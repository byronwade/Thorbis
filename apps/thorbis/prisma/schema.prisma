// prisma/schema.prisma
datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String   @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String        @id @default(cuid())
  name          String?
  email         String?       @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  integrations  Integration[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  Project Project[]

  TeamMember TeamMember[]

  siteConfig      SiteConfig?
}

model Integration {
  id          String   @id @default(cuid())
  userId      String
  platform    String
  accessToken String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([userId, platform])
}

model Project {
  id          String       @id @default(cuid())
  name        String
  description String?
  userId      String
  user        User         @relation(fields: [userId], references: [id])
  teamMembers TeamMember[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  @@index([userId])
}

model TeamMember {
  id        String   @id @default(cuid())
  userId    String
  projectId String
  role      String
  user      User     @relation(fields: [userId], references: [id])
  project   Project  @relation(fields: [projectId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, projectId])
  @@index([projectId])
  @@index([userId])
}

model SiteConfig {
  id              String   @id @default(cuid())
  userId          String   @unique
  siteName        String
  siteDescription String?
  adminEmail      String
  timezone        String
  databasePrefix  String   @default("th_")
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}